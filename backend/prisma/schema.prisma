// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Category {
  id          String        @id @default(cuid())
  name        String        @db.VarChar(50)
  slug        String        @unique @db.VarChar(100)
  cover       String?       @db.Text
  description String        @db.Text
  updatedAt   DateTime      @updatedAt
  createdAt   DateTime      @default(now())
  Destination Destination[]

  @@map("categories")
}

model District {
  id          String        @id @default(cuid())
  name        String        @db.VarChar(50)
  slug        String        @unique @db.VarChar(100)
  cover       String?       @db.Text
  description String        @db.Text
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Destination Destination[]
  Activity    Activity[]

  @@map("districts")
}

model Destination {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(100)
  slug         String   @unique @db.VarChar(200)
  description  String   @db.Text
  cover        String?  @db.Text
  address      String   @db.Text
  latitude     Float
  longitude    Float
  price        Int      @default(0)
  districtSlug String
  categorySlug String
  district     District @relation(fields: [districtSlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  category     Category @relation(fields: [categorySlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("destinations")
}

model Activity {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(100)
  slug         String   @unique
  description  String   @db.Text
  body         String   @db.Text
  cover        String?  @db.Text
  address      String?  @db.Text
  districtSlug String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  district     District @relation(fields: [districtSlug], references: [slug])

  @@map("activities")
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique @db.VarChar(30)
  password  String   @db.Text
  token     String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}
